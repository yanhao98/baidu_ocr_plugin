// Autogenerated from Pigeon (v4.2.14), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class InitWithAkSkRequestData;
@class InitResponseData;
@class OCRErrorResponseData;

@interface InitWithAkSkRequestData : NSObject
+ (instancetype)makeWithAk:(nullable NSString *)ak
    sk:(nullable NSString *)sk;
@property(nonatomic, copy, nullable) NSString * ak;
@property(nonatomic, copy, nullable) NSString * sk;
@end

@interface InitResponseData : NSObject
+ (instancetype)makeWithIsSuccess:(nullable NSNumber *)isSuccess
    accessToken:(nullable NSString *)accessToken
    ocrError:(nullable OCRErrorResponseData *)ocrError;
@property(nonatomic, strong, nullable) NSNumber * isSuccess;
@property(nonatomic, copy, nullable) NSString * accessToken;
@property(nonatomic, strong, nullable) OCRErrorResponseData * ocrError;
@end

@interface OCRErrorResponseData : NSObject
+ (instancetype)makeWithErrorCode:(nullable NSNumber *)errorCode
    errorMessage:(nullable NSString *)errorMessage;
@property(nonatomic, strong, nullable) NSNumber * errorCode;
@property(nonatomic, copy, nullable) NSString * errorMessage;
@end

/// The codec used by OcrHostApi.
NSObject<FlutterMessageCodec> *OcrHostApiGetCodec(void);

@protocol OcrHostApi
- (void)initAccessTokenWithAkSkRequest:(InitWithAkSkRequestData *)request completion:(void(^)(InitResponseData *_Nullable, FlutterError *_Nullable))completion;
- (void)initAccessTokenWithCompletion:(void(^)(InitResponseData *_Nullable, FlutterError *_Nullable))completion;
- (void)recognizeGeneralBasicBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeAccurateBasicBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeGeneralBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeAccurateBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeGeneralEnhancedBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeWebimageBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeDrivingLicenseBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeVehicleLicenseBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeBusinessLicenseBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeReceiptBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeVatInvoiceBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeTaxireceiptBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeLicensePlateBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeVincodeBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeTrainticketBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeNumbersBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeQrcodeBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeTripTicketBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeVihickleSellInvoiceBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeVihickleCertificateBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeExampleDocBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeWrittenTextBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizePassportBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeHuKouPageBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeNormalMachineInvoiceBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recognizeCustomBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeweightnoteBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzemedicaldetailBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
- (void)recoginzeonlinetaxiitineraryBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
/// 身份证正面(本地质量控制)
- (void)recognizeIdCardFrontNativeWithError:(FlutterError *_Nullable *_Nonnull)error;
/// 身份证反面(本地质量控制)
- (void)recognizeIdCardBackNativeWithError:(FlutterError *_Nullable *_Nonnull)error;
/// 银行卡识别
- (void)recognizeBankCardBytes:(nullable FlutterStandardTypedData *)bytes error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void OcrHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<OcrHostApi> *_Nullable api);

/// The codec used by RecognizeListenerFlutterApi.
NSObject<FlutterMessageCodec> *RecognizeListenerFlutterApiGetCodec(void);

@interface RecognizeListenerFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)onReceivedStartImageBytes:(FlutterStandardTypedData *)imageBytes completion:(void(^)(NSError *_Nullable))completion;
- (void)onReceivedResultJsonResult:(NSString *)jsonResult completion:(void(^)(NSError *_Nullable))completion;
- (void)onReceivedErrorOcrErrorResponseData:(OCRErrorResponseData *)ocrErrorResponseData completion:(void(^)(NSError *_Nullable))completion;
@end
NS_ASSUME_NONNULL_END
